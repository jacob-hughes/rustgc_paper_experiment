# -*- mode: yaml -*-
# Config file for ReBench

runs:
    max_invocation_time: 360

benchmark_suites:
    som-rs:
        gauge_adapter: Time
        command: "-c SOM/Smalltalk SOM/Examples/Benchmarks SOM/Examples/Benchmarks/Richards SOM/Examples/Benchmarks/DeltaBlue SOM/Examples/Benchmarks/NBody SOM/Examples/Benchmarks/Json SOM/Examples/Benchmarks/GraphSearch SOM/Examples/Benchmarks/LanguageFeatures -- BenchmarkHarness %(benchmark)s %(iterations)s "
        benchmarks: &BENCHMARKS
            - Richards:     {extra_args: 1}
            - DeltaBlue:    {extra_args: 400}
            - NBody:        {extra_args: 1000}
            - JsonSmall:    {extra_args: 7}
            - GraphSearch:  {extra_args: 7}
            - PageRank:     {extra_args: 50}
            - Fannkuch:     {extra_args: 7}
            - Fibonacci:    {extra_args: "10"}
            - Dispatch:     {extra_args: 10}
            - Bounce:       {extra_args: "10"}
            - Loop:         {extra_args: 10}
            - Permute:      {extra_args: "10"}
            - Queens:       {extra_args: "10"}
            - List:         {extra_args: "5"}
            - Recurse:      {extra_args: "10"}
            - Storage:      {extra_args: 10}
            - Sieve:        {extra_args: 10}
            - BubbleSort:   {extra_args: "10"}
            - QuickSort:    {extra_args: 20}
            - Sum:          {extra_args: 10}
            - Towers:       {extra_args: "3"}
            - TreeSort:     {extra_args: "3"}
            - IntegerLoop:  {extra_args: 5}
            - FieldLoop:    {extra_args: 5}
            - WhileLoop:    {extra_args: 20}
            - Mandelbrot:   {extra_args: 50}
    yksom:
        gauge_adapter: Time
        command: "--cp SOM/Smalltalk:SOM/Examples/Benchmarks/Richards:SOM/Examples/Benchmarks/DeltaBlue:SOM/Examples/Benchmarks/NBody:SOM/Examples/Benchmarks/Json:SOM/Examples/Benchmarks/GraphSearch:SOM/Examples/Benchmarks/LanguageFeatures SOM/Examples/Benchmarks/BenchmarkHarness.som %(benchmark)s %(iterations)s"
        benchmarks: *BENCHMARKS

experiments:
    som-rs-ast-gcvs-perf:
        env:
            BIN: "som-rs-ast"
            EXPERIMENT: "gcvs"
            EXPTYPE: "perf"
        suites:
            - som-rs
        executions:
            - gcvs-gc
            - gcvs-rc
    som-rs-ast-gcvs-mem:
        env:
            BIN: "som-rs-ast"
            EXPERIMENT: "gcvs"
            EXPTYPE: "mem"
        suites:
            - som-rs
        executions:
            - gcvs-gc
            - gcvs-rc
    som-rs-ast-premopt-mem:
        env:
            BIN: "som-rs-ast"
            EXPERIMENT: "premopt"
            EXPTYPE: "mem"
        suites:
            - som-rs
        executions:
            - premopt-naive
            - premopt-none
            - premopt-opt
    som-rs-ast-premopt-perf:
        env:
            BIN: "som-rs-ast"
            EXPERIMENT: "premopt"
            EXPTYPE: "perf"
        suites:
            - som-rs
        executions:
            - premopt-naive
            - premopt-none
            - premopt-opt
    som-rs-ast-elision-perf:
        env:
            BIN: "som-rs-ast"
            EXPERIMENT: "elision"
            EXPTYPE: "perf"
        suites:
            - som-rs
        executions:
            - elision-naive
            - elision-opt
    som-rs-ast-elision-mem:
        env:
            BIN: "som-rs-ast"
            EXPERIMENT: "elision"
            EXPTYPE: "mem"
        suites:
            - som-rs
        executions:
            - elision-naive
            - elision-opt

    som-rs-bc-gcvs-perf:
        env:
            BIN: "som-rs-bc"
            EXPERIMENT: "gcvs"
            EXPTYPE: "perf"
        suites:
            - som-rs
        executions:
            - gcvs-gc
            - gcvs-rc
    som-rs-bc-gcvs-mem:
        env:
            BIN: "som-rs-bc"
            EXPERIMENT: "gcvs"
            EXPTYPE: "mem"
        suites:
            - som-rs
        executions:
            - gcvs-gc
            - gcvs-rc
    som-rs-bc-premopt-mem:
        env:
            BIN: "som-rs-bc"
            EXPERIMENT: "premopt"
            EXPTYPE: "mem"
        suites:
            - som-rs
        executions:
            - premopt-naive
            - premopt-none
            - premopt-opt
    som-rs-bc-premopt-perf:
        env:
            BIN: "som-rs-bc"
            EXPERIMENT: "premopt"
            EXPTYPE: "perf"
        suites:
            - som-rs
        executions:
            - premopt-naive
            - premopt-none
            - premopt-opt
    som-rs-bc-elision-perf:
        env:
            BIN: "som-rs-bc"
            EXPERIMENT: "elision"
            EXPTYPE: "perf"
        suites:
            - som-rs
        executions:
            - elision-naive
            - elision-opt
    som-rs-bc-elision-mem:
        env:
            BIN: "som-rs-bc"
            EXPERIMENT: "elision"
            EXPTYPE: "mem"
        suites:
            - som-rs
        executions:
            - elision-naive
            - elision-opt

    yksom-premopt-mem:
        env:
            BIN: "yksom"
            EXPERIMENT: "premopt"
            EXPTYPE: "mem"
        suites:
            - yksom
        executions:
            - premopt-naive
            - premopt-none
            - premopt-opt
    yksom-premopt-perf:
        env:
            BIN: "yksom"
            EXPERIMENT: "premopt"
            EXPTYPE: "perf"
        suites:
            - yksom
        executions:
            - premopt-naive
            - premopt-none
            - premopt-opt
    yksom-elision-perf:
        env:
            BIN: "yksom"
            EXPERIMENT: "elision"
            EXPTYPE: "perf"
        suites:
            - yksom
        executions:
            - elision-naive
            - elision-opt
    yksom-elision-mem:
        env:
            BIN: "yksom"
            EXPERIMENT: "elision"
            EXPTYPE: "mem"
        suites:
            - yksom
        executions:
            - elision-naive
            - elision-opt

executors:
    gcvs-gc:
        path: .
        executable: run.sh
        args: "gc %(invocation)s"
    gcvs-rc:
        path: .
        executable: run.sh
        args: "rc %(invocation)s"
    premopt-naive:
        path: .
        executable: run.sh
        args: "naive %(invocation)s"
    premopt-none:
        path: .
        executable: run.sh
        args: "none %(invocation)s"
    premopt-opt:
        path: .
        executable: run.sh
        args: "opt %(invocation)s"
    elision-naive:
        path: .
        executable: run.sh
        args: "naive %(invocation)s"
    elision-opt:
        path: .
        executable: run.sh
        args: "opt %(invocation)s"

