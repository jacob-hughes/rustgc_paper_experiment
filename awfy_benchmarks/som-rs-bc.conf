# -*- mode: yaml -*-
# Config file for ReBench

runs:
    max_invocation_time: 360

benchmark_suites:
    macro:
        gauge_adapter: RebenchLog
        command: "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/Richards core-lib/Examples/Benchmarks/DeltaBlue core-lib/Examples/Benchmarks/NBody core-lib/Examples/Benchmarks/Json core-lib/Examples/Benchmarks/GraphSearch -- BenchmarkHarness %(benchmark)s %(iterations)s "
        benchmarks:
            - Richards:     {extra_args: 1}
            - DeltaBlue:    {extra_args: 400}
            - NBody:        {extra_args: 1000}
            - JsonSmall:    {extra_args: 7}
            - GraphSearch:  {extra_args: 7}
            - PageRank:     {extra_args: 50}

    micro:
        gauge_adapter: RebenchLog
        command: "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/LanguageFeatures -- BenchmarkHarness %(benchmark)s %(iterations)s "
        benchmarks:
            - Fannkuch:     {extra_args: 7}
            - Fibonacci:    {extra_args: "10"}
            - Dispatch:     {extra_args: 10}
            - Bounce:       {extra_args: "10"}
            - Loop:         {extra_args: 10}
            - Permute:      {extra_args: "10"}
            - Queens:       {extra_args: "10"}
            - List:         {extra_args: "5"}
            - Recurse:      {extra_args: "10"}
            - Storage:      {extra_args: 10}
            - Sieve:        {extra_args: 10}
            - BubbleSort:   {extra_args: "10"}
            - QuickSort:    {extra_args: 20}
            - Sum:          {extra_args: 10}
            - Towers:       {extra_args: "3"}
            - TreeSort:     {extra_args: "3"}
            - IntegerLoop:  {extra_args: 5}
            - FieldLoop:    {extra_args: 5}
            - WhileLoop:    {extra_args: 20}
            - Mandelbrot:   {extra_args: 50}

experiments:
    som_rs_bc_elision:
        suites:
            - micro
            - macro
        executions:
            - finalise_naive
            - finalise_elide
    som_rs_bc_perf:
        suites:
            - micro
            - macro
        executions:
            - perf_rc
            - perf_gc
    som_rs_bc_barriers:
        suites:
            - micro
            - macro
        executions:
            - barriers_naive
            - barriers_none
            - barriers_opt

executors:
    perf_rc:
        env:
            GC_DONT_GC: "true"
        path: bin/som-rs/perf_rc
        executable: som-rs-bc
    perf_gc:
        env:
            DUMP_GC_STATS: ../../../results/som_rs_bc_perf/perf_gc.log
        path: bin/som-rs/perf_gc
        executable: som-rs-bc
    finalise_naive:
        env:
            DUMP_GC_STATS: ../../../results/som_rs_bc_elision/finalise_naive.log
        path: bin/som-rs/finalise_naive
        executable: som-rs-bc
    finalise_elide:
        env:
            DUMP_GC_STATS: ../../../results/som_rs_bc_elision/finalise_elide.log
        path: bin/som-rs/finalise_elide
        executable: som-rs-bc
    barriers_naive:
        env:
            DUMP_GC_STATS: ../../../results/som_rs_bc_barriers/barriers_naive.log
        path: bin/som-rs/barriers_naive
        executable: som-rs-bc
    barriers_none:
        env:
            DUMP_GC_STATS: ../../../results/som_rs_bc_barriers/barriers_none.log
        path: bin/som-rs/barriers_none
        executable: som-rs-bc
    barriers_opt:
        env:
            DUMP_GC_STATS: ../../../results/som_rs_bc_barriers/barriers_opt.log
        path: bin/som-rs/barriers_opt
        executable: som-rs-bc

